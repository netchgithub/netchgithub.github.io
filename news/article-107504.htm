<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://netchgithub.github.io/news/article-107504.htm" />
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java</title>
        <meta name="description" content="阅读Dubbo源码过程中，会发现，Dubbo消费端在做远程调用时，默认通过 Javassist 框架为服务接口生成动态代理类，调用javassist框架下的JavassistProxyFactory类" />
        <link rel="icon" href="/assets/website/img/netchgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Netch Github节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://netchgithub.github.io/news/article-107504.htm" />
    <meta property="og:site_name" content="Netch Github节点订阅官网" />
    <meta property="og:title" content="详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java" />
    <meta property="og:image" content="https://netchgithub.github.io/uploads/20240819-2/37799d280b683b70210fbbc6f3490838.webp" />
        <meta property="og:release_date" content="2025-04-29T08:04:15" />
    <meta property="og:updated_time" content="2025-04-29T08:04:15" />
        <meta property="og:description" content="阅读Dubbo源码过程中，会发现，Dubbo消费端在做远程调用时，默认通过 Javassist 框架为服务接口生成动态代理类，调用javassist框架下的JavassistProxyFactory类" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="site.webmanifest">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- CSS here -->
    <link rel="stylesheet" href="/assets/website/css/netchgithub/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/slicknav.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/animate.min.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/fontawesome-all.min.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/themify-icons.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/slick.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/netchgithub/style.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WPZ6L4HTT1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-WPZ6L4HTT1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="preloader-circle"></div>
                <div class="preloader-img pere-text">
                    <img src="/assets/website/img/netchgithub/logo/logo.png" alt="">
                </div>
            </div>
        </div>
    </div>
    <!-- Preloader Start -->
    <header>
        <!-- Header Start -->
        <div class="header-area header-transparrent ">
            <div class="main-header header-sticky">
                <div class="container">
                    <div class="row align-items-center">
                        <!-- Logo -->
                        <div class="col-md-4">
                            <div class="logo">
                                <a href="/">
                                                                <span>Netch Github</span>
                                                                </a>
                            </div>
                        </div>
                        <div class="col-xl-8 col-lg-8 col-md-8">
                            <!-- Main-menu -->
                            <div class="main-menu f-right d-none d-lg-block">
                                <nav>
                                    <ul id="navigation">
                                                                                <li><a href="/"> 首页</a></li>
                                                                                <li><a href="/free-nodes/"> 免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/"> 推荐机场</a></li>
                                                                                <li><a href="/client.htm"> 客户端</a></li>
                                                                                <li><a href="/news/"> 新闻资讯</a></li>
                                                                            </ul>
                                </nav>
                            </div>
                        </div>
                        <!-- Mobile Menu -->
                        <div class="col-12">
                            <div class="mobile_menu d-block d-lg-none"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Header End -->
    </header>
    <main>
        <!-- Slider Area Start-->
        <div class="services-area">
            <div class="container">
                <!-- Section-tittle -->
                <div class="row d-flex justify-content-center">
                    <div class="col-lg-8">
                        <div class="section-tittle text-center mb-80">
                            <h1>详解Alibaba Java诊断工具Arthas查看Dubbo动态代理类_java</h1>
                            <p>
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Slider Area End-->
        <!-- We Create Start -->
        <div class="we-create-area create-padding">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail xcblog-blog-detail-defined">
                      				  				  				<p>阅读Dubbo源码过程中，会发现，Dubbo消费端在做远程调用时，默认通过 Javassist 框架为服务接口生成动态代理类，调用javassist框架下的JavassistProxyFactory类的getProxy(Invoker invoker, Class&lt;?&gt;[] interfaces)方法，动态生成一个存放在JVM中的动态代理类。</p> <div class="ay1code"> <pre class="brush:java;">public &lt;T&gt; T getProxy(Invoker&lt;T&gt; invoker, Class&lt;?&gt;[] interfaces) {      return (T) Proxy.getProxy(interfaces).newInstance(new InvokerInvocationHandler(invoker));  }</pre> </div> <p>那么，问题来了，如果我们想要一睹该动态生成的代理类内部结构是怎样的，如何才能便捷做到的？</p> <p>这就是我想介绍的一款工具，它可以帮助我们查看JDK或者javassist生成的动态代理类，当然，它的功能远不止此，还可以在生产环境进行诊断。</p> <p>Arthas 是Alibaba开源的Java诊断工具，官方在线文档地址：https://arthas.aliyun.com/doc/</p> <p>根据官网上的介绍，它还可以解决以下问题————</p> <p>当你遇到以下类似问题而束手无策时，Arthas可以帮助你解决：</p> <p>这个类从哪个 jar 包加载的？为什么会报各种类相关的 Exception？</p> <p>我改的代码为什么没有执行到？难道是我没 commit？分支搞错了？</p> <p>遇到问题无法在线上 debug，难道只能通过加日志再重新发布吗？</p> <p>线上遇到某个用户的数据处理有问题，但线上同样无法 debug，线下无法重现！</p> <p>是否有一个全局视角来查看系统的运行状况？</p> <p>有什么办法可以监控到JVM的实时运行状态？</p> <p>怎么快速定位应用的热点，生成火焰图？</p> <p>怎样直接从JVM内查找某个类的实例？</p> <p>这些方案本文暂不展开，这里只展开通过该工具查看Dubbo生成的动态代理类。</p> <p>我是直接在使用dubbo-parent源码中的例子，分别启动了提供者与消费者。</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/e02fe5cef167d19a7b0cd16bf532838b.jpg"></p> <p>首先，启动提供者方法——</p> <div class="ay1code"> <pre class="brush:java;">public class Application {      public static void main(String[] args) throws Exception {              startWithBootstrap();         }      private static boolean isClassic(String[] args) {          return args.length &gt; 0 &amp;&amp; "classic".equalsIgnoreCase(args[0]);      }      private static void startWithBootstrap() {          ServiceConfig&lt;DemoServiceImpl&gt; service = new ServiceConfig&lt;&gt;();          service.setInterface(DemoService.class);          service.setRef(new DemoServiceImpl());          DubboBootstrap bootstrap = DubboBootstrap.getInstance();          RegistryConfig registryConfig = new RegistryConfig("zookeeper://127.0.0.1:2181");          registryConfig.setTimeout(20000);          ProtocolConfig protocolConfig = new ProtocolConfig();          protocolConfig.setName("dubbo");          protocolConfig.setHost("192.168.100.1");          protocolConfig.setPort(20877);          bootstrap.application(new ApplicationConfig("dubbo-demo-api-provider"))                  .registry(registryConfig)                  .service(service)                  .protocol(protocolConfig)                  .start()                  .await();      }  }  </pre> </div> <p>注意，需要配置RegistryConfig自己的zookeeper， protocolConfig.setHost("xxx.xxx.xxx.xxx")设置成你本地内网的ip即可；</p> <p>DemoServiceImpl类详情——</p> <div class="ay1code"> <pre class="brush:java;">public class DemoServiceImpl implements DemoService {      private static final Logger logger = LoggerFactory.getLogger(DemoServiceImpl.class);        @Override      public String sayHello(String name) {          logger.info("Hello " + name + ", request from consumer: " + RpcContext.getContext().getRemoteAddress());          return "Hello " + name + ", response from provider: " + RpcContext.getContext().getLocalAddress();      }        public CompletableFuture&lt;String&gt; sayHelloAsync(String name) {          return null;    }  </pre> </div> <p>接着，启动消费者，这里可以设置一个休眠时间，这样就可以一直维持消费者运行在内存当中——</p> <div class="ay1code"> <pre class="brush:java;">public class Application {      public static void main(String[] args) {              runWithRefer();      }      private static void runWithRefer() {          RegistryConfig registryConfig = new RegistryConfig("zookeeper://127.0.0.1:2181");          registryConfig.setTimeout(30000);          ProtocolConfig protocolConfig = new ProtocolConfig();          protocolConfig.setName("dubbo");          protocolConfig.setHost("192.168.200.1");          protocolConfig.setPort(20899);          ReferenceConfig&lt;DemoService&gt; reference = new ReferenceConfig&lt;&gt;();          reference.setApplication(new ApplicationConfig("dubbo-demo-api-consumer"));          reference.setRegistry(registryConfig);          reference.setInterface(DemoService.class);          DemoService service = reference.get();          String message = service.sayHello("dubbo");          System.out.println("打印了5555555"+message);          try {              Thread.sleep(100000000);          } catch (InterruptedException e) {              e.printStackTrace();          }  }  </pre> </div> <p>当Dubbo的服务提供者与消费者都正常运行时，说明此时JVM虚拟机内存里已经存在动态生成的代理类，这时，我们就可以开始通过arthas-boot.jar工具进行查看了。</p> <p>首先，将arthas-boot.jar工具下载到你本地，我的是Windows，随便放到一个目录当中，例如——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/9f27f234f65168cc3b60e683c23d9252.jpg"></p> <p>接着，直接在运行着Dubbo消费端进程的IDEA上打开Terminal——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/717516dd54851ea6b75c89eebd2d19e4.jpg"></p> <p>然后，输入 java -jar C:\Users\92493\Downloads\12229238_g\arthas-boot.jar ，arthas正常运行成功话，将列出当前JVM上运行的进程——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/2e9f791797287221572fbdeabe598e45.jpg"></p> <p>可以看到我们刚刚启动的provider进程与consumer进程，这时，只需要输入对应进程前面的编号【5】，就可以将Arthas 关联到启动类为 org.apache.dubbo.demo.consumer.Application的 Java 进程上了——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/f91ea77732546e16025b8a6b6bfb979b.jpg"></p> <p>到这一步，我们就可以通过指令 sc *.proxy *模糊查询带有proxy标志的类名了，动态代理生成的类一般都是以Proxy标志——</p> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220427/4dc078c2fb3705b5cdf0a1a75c4622a4.jpg"></p> <p>其中，这里的org.apache.dubbo.common.bytecode.proxy0就是消费者生成的动态代理类，我们可以直接反编译去查看它内部结构——</p> <p>[arthas@57676]$ jad org.apache.dubbo.common.bytecode.proxy0</p> <p>控制台就会打印出该动态代理类的内部结构——</p> <div class="ay1code"> <pre class="brush:java;">/*   * Decompiled with CFR.   *    * Could not load the following classes:   * com.alibaba.dubbo.rpc.service.EchoService   * org.apache.dubbo.common.bytecode.ClassGenerator$DC   * org.apache.dubbo.demo.DemoService   * org.apache.dubbo.rpc.service.Destroyable     */     package org.apache.dubbo.common.bytecode;  import com.alibaba.dubbo.rpc.service.EchoService;  import java.lang.reflect.InvocationHandler;  import java.lang.reflect.Method;  import java.util.concurrent.CompletableFuture;  import org.apache.dubbo.common.bytecode.ClassGenerator;  import org.apache.dubbo.demo.DemoService;  import org.apache.dubbo.rpc.service.Destroyable;  public class proxy0 implements ClassGenerator.DC,Destroyable,EchoService,DemoService {  public static Method[] methods;  private InvocationHandler handler;  public String sayHello(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[0], objectArray);      return (String)object;  }  public CompletableFuture sayHelloAsync(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[1], objectArray);      return (CompletableFuture)object;  }  public Object $echo(Object object) {      Object[] objectArray = new Object[]{object};      Object object2 = this.handler.invoke(this, methods[2], objectArray);      return object2;  }  public void $destroy() {      Object[] objectArray = new Object[]{};      Object object = this.handler.invoke(this, methods[3], objectArray);  }  public proxy0() {  }  public proxy0(InvocationHandler invocationHandler) {      this.handler = invocationHandler;    }  }  </pre> </div> <p>在Dubbo案例当中，当我们执行 String message = service.sayHello("dubbo")去调用远程接口时，其实是调用了动态代理生成的方法——</p> <div class="ay1code"> <pre class="brush:java;">public String sayHello(String string) {      Object[] objectArray = new Object[]{string};      Object object = this.handler.invoke(this, methods[0], objectArray);      return (String)object;  }  </pre> </div> <p>举一反三，这个Arthas工具类可以在线上生产环境查看一些我们新部署的代码，看是否是新改动的。</p> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-106448.htm">动物防疫法的主体内容（动物防疫法解读）</a></p>
                                        <p>下一个：<a href="/news/article-107505.htm">动物医院评价怎么写好（宠物医院评价怎么写）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-69195.htm" title="十大兽药公司名单（比较有名的兽药公司）">十大兽药公司名单（比较有名的兽药公司）</a></li>
                        <li class="py-2"><a href="/news/article-73143.htm" title="动物医院电话号码查询（动物医院电话号码查询）">动物医院电话号码查询（动物医院电话号码查询）</a></li>
                        <li class="py-2"><a href="/news/article-95193.htm" title="动物医院英语短语怎么写的 动物医院英语短语怎么写的呀">动物医院英语短语怎么写的 动物医院英语短语怎么写的呀</a></li>
                        <li class="py-2"><a href="/news/article-90683.htm" title="宠物领养数据统计软件（宠物领养软件下载）">宠物领养数据统计软件（宠物领养软件下载）</a></li>
                        <li class="py-2"><a href="/news/article-77199.htm" title="常用的动物疫苗 常用的动物疫苗佐剂有哪些">常用的动物疫苗 常用的动物疫苗佐剂有哪些</a></li>
                        <li class="py-2"><a href="/news/article-90684.htm" title="孕妇让猫抓破了流血了（孕妇让猫抓破了流了一点点血）">孕妇让猫抓破了流血了（孕妇让猫抓破了流了一点点血）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-netch-node.htm" title="「3月25日」最高速度18.1M/S，2025年Netch每天更新免费机场订阅节点链接">「3月25日」最高速度18.1M/S，2025年Netch每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-102540.htm" title="再谈JavaScript中bind、call、apply三个方法的区别与使用方式_javascript技巧">再谈JavaScript中bind、call、apply三个方法的区别与使用方式_javascript技巧</a></li>
                        <li class="py-2"><a href="/news/article-71169.htm" title="动物防疫管理常识内容（动物防疫防控基础知识）">动物防疫管理常识内容（动物防疫防控基础知识）</a></li>
                        <li class="py-2"><a href="/news/article-73803.htm" title="动物免疫接种的意义 动物免疫接种的意义是什么">动物免疫接种的意义 动物免疫接种的意义是什么</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </div>
        <!-- We Create End -->
    </main>
        <footer>
        <!-- Footer Start-->
        <div class="footer-main" data-background="assets/img/shape/footer_bg.png">
            <!-- footer-bottom aera -->
            <div class="footer-bottom-area footer-bg">
                <div class="container">
                    <div class="footer-border">
                        <div class="row d-flex align-items-center">
                            <div class="col-xl-12 ">
                                <div class="footer-copy-right text-center">
                                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                                    <p>
                                        Netch Github节点订阅官网 版权所有
                                        <br />
                                        Powered by WordPress
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Footer End-->
    </footer>
    <!-- JS here -->
    <!-- All JS Custom Plugins Link Here here -->
    <script src="/assets/website/js/frontend/netchgithub/vendor/modernizr-3.5.0.min.js"></script>
    <!-- Jquery, Popper, Bootstrap -->
    <script src="/assets/website/js/frontend/netchgithub/vendor/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/popper.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/bootstrap.min.js"></script>
    <!-- Jquery Mobile Menu -->
    <script src="/assets/website/js/frontend/netchgithub/jquery.slicknav.min.js"></script>
    <!-- Jquery Slick , Owl-Carousel Plugins -->
    <script src="/assets/website/js/frontend/netchgithub/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/slick.min.js"></script>
    <!-- Date Picker -->
    <script src="/assets/website/js/frontend/netchgithub/gijgo.min.js"></script>
    <!-- One Page, Animated-HeadLin -->
    <script src="/assets/website/js/frontend/netchgithub/wow.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/animated.headline.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.magnific-popup.js"></script>
    <!-- Scrollup, nice-select, sticky -->
    <script src="/assets/website/js/frontend/netchgithub/jquery.scrollUp.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.sticky.js"></script>
    <!-- contact js -->
    <script src="/assets/website/js/frontend/netchgithub/contact.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.form.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.validate.min.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/mail-script.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/jquery.ajaxchimp.min.js"></script>
    <!-- Jquery Plugins, main Jquery -->
    <script src="/assets/website/js/frontend/netchgithub/plugins.js"></script>
    <script src="/assets/website/js/frontend/netchgithub/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>